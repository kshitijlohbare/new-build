import { useState, useRef, useEffect } from "react";
import { Link } from "react-router-dom";
import { useAuth } from "@/context/AuthContext";
import { usePractices } from "@/context/PracticeContext";

// Add animation for dropdown menu
const fadeInAnimation = `
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}
.animate-fadeIn {
  animation: fadeIn 0.2s ease-out forwards;
}
`;

const AppNavbar = () => {
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const dropdownRef = useRef<HTMLDivElement>(null);
  const { user } = useAuth();
  const { userProgress } = usePractices();
  
  // Add the animation style to the document
  useEffect(() => {
    const styleElement = document.createElement('style');
    styleElement.textContent = fadeInAnimation;
    document.head.appendChild(styleElement);
    
    return () => {
      document.head.removeChild(styleElement);
    };
  }, []);

  // Close dropdown when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {
        setIsDropdownOpen(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  return (
    <nav style={{backgroundColor: "#15A9D6"}} className="app-navbar bg-[#15A9D6] sticky top-0 z-50 py-2 sm:py-2.5">
      <div className="container flex h-12 sm:h-14 items-center justify-between px-3 sm:px-4">
        {/* Left: Hamburger menu for mobile */}
        <div className="flex items-center flex-1 min-w-0">
          <button className="w-8 h-8 flex flex-col justify-center items-center gap-1" aria-label="Menu">
            <div className="w-5 h-0.5 bg-white rounded-full"></div>
            <div className="w-5 h-0.5 bg-white rounded-full"></div>
            <div className="w-5 h-0.5 bg-white rounded-full"></div>
          </button>
        </div>
        
        {/* Center: Mobile-responsive logo with white text and centered */}
        <div className="flex-1 flex justify-center">
          <Link to="/" className="flex items-center">
            <span className="font-happy-monkey text-lg sm:text-xl md:text-2xl font-bold text-white cursor-pointer select-none">CACTUS COCO</span>
          </Link>
        </div>
        
        {/* Right: User profile icon only */}
        <div className="flex items-center flex-1 justify-end min-w-0">
          {/* User profile icon */}
          <div className="relative" ref={dropdownRef}>
            <button 
              className="w-8 h-8 bg-white rounded-full flex items-center justify-center shadow-sm transition-all hover:bg-gray-50 cursor-pointer"
              onClick={() => setIsDropdownOpen(!isDropdownOpen)}
              aria-label="User menu"
            >
              <span className="text-gray-600 text-base" style={{ fontSize: '16px' }}>ðŸ‘¤</span>
            </button>
            
            {/* Enhanced mobile-responsive dropdown menu */}
            {isDropdownOpen && (
              <div className="absolute right-0 mt-2 w-48 sm:w-56 bg-white rounded-md shadow-lg z-50 overflow-hidden border border-gray-100 animate-fadeIn">
                <div className="py-1">
                  <div className="px-3 sm:px-4 py-2 sm:py-3 bg-gray-50 border-b border-gray-100">
                    <p className="text-sm font-medium text-gray-700">{user?.user_metadata?.name || 'User'}</p>
                    <p className="text-xs text-gray-500 truncate">{user?.email || 'No email'}</p>
                  </div>
                  {/* Enhanced touch-friendly dropdown items */}
                  <button className="block w-full text-left px-3 sm:px-4 py-3 sm:py-2.5 text-sm text-gray-700 hover:bg-gray-100 transition-colors min-h-[44px] sm:min-h-auto touch-action-manipulation">
                    Profile
                  </button>
                  <button className="block w-full text-left px-3 sm:px-4 py-3 sm:py-2.5 text-sm text-gray-700 hover:bg-gray-100 transition-colors min-h-[44px] sm:min-h-auto touch-action-manipulation">
                    Settings
                  </button>
                  <button className="block w-full text-left px-3 sm:px-4 py-3 sm:py-2.5 text-sm text-red-600 hover:bg-red-50 transition-colors min-h-[44px] sm:min-h-auto touch-action-manipulation">
                    Sign out
                  </button>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </nav>
  );
};

export default AppNavbar;

export default AppNavbar;